precision mediump float;

struct Light {
  vec3 position;
  vec3 color;
  float intensity;
};

uniform vec4 color;
uniform Light lights[3];

varying vec3 position;

vec3 colorFromLight (vec3 position, Light light) {
  float dist = distance(position, light.position);
  float i    = clamp(light.intensity / (dist * dist), 0.0, 1.0);

  return i * light.color;
}

void main () {
  vec3 finalColor = vec3(0.0, 0.0, 0.0);

  for (int i = 0; i < 3; i++) {
    finalColor += (0.3 * colorFromLight(position, lights[i]));
  }
  gl_FragColor = vec4(
    min(finalColor[0], 1.0),
    min(finalColor[1], 1.0),
    min(finalColor[2], 1.0),
    0.0);
} 
